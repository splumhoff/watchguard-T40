WatchGuard patches to sources for iproute2-4.3.0 as of
Mon May  9 13:54:22 PDT 2022
The patches shown here have been applied to source .tar.gz 
files supplied with the WatchGuard Open Source Archive.

==========================================================================
--- iproute2-4.3.0/tc/tc_core.c.orig	2022-05-09 13:54:19.346507548 -0700
+++ iproute2-4.3.0/tc/tc_core.c	2022-05-09 13:54:19.546499435 -0700
@@ -16,6 +16,7 @@
 #include <syslog.h>
 #include <fcntl.h>
 #include <math.h>
+#include <stdint.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
--- iproute2-4.3.0/tc/tc_filter.c.orig	2022-05-09 13:54:19.346507548 -0700
+++ iproute2-4.3.0/tc/tc_filter.c	2022-05-09 13:54:19.562498786 -0700
@@ -163,6 +163,7 @@
 
 		if ((req.t.tcm_ifindex = ll_name_to_index(d)) == 0) {
 			fprintf(stderr, "Cannot find device \"%s\"\n", d);
+			not_find_device++;
 			return 1;
 		}
 	}
@@ -331,6 +332,7 @@
 	if (d[0]) {
 		if ((t.tcm_ifindex = ll_name_to_index(d)) == 0) {
 			fprintf(stderr, "Cannot find device \"%s\"\n", d);
+			not_find_device++;
 			return 1;
 		}
 		filter_ifindex = t.tcm_ifindex;
--- iproute2-4.3.0/tc/tc_common.h.orig	2022-05-09 13:54:19.346507548 -0700
+++ iproute2-4.3.0/tc/tc_common.h	2022-05-09 13:54:19.546499435 -0700
@@ -1,6 +1,8 @@
 
 #define TCA_BUF_MAX	(64*1024)
 
+extern int not_find_device;
+
 extern struct rtnl_handle rth;
 
 extern int do_qdisc(int argc, char **argv);
--- iproute2-4.3.0/tc/tc.c.orig	2022-05-09 13:54:19.346507548 -0700
+++ iproute2-4.3.0/tc/tc.c	2022-05-09 13:54:19.538499759 -0700
@@ -48,6 +48,9 @@
 
 struct rtnl_handle rth;
 
+extern int ignore_error;
+int not_find_device = 0;
+
 static void *BODY = NULL;	/* cached handle dlopen(NULL) */
 static struct qdisc_util * qdisc_list;
 static struct filter_util * filter_list;
@@ -190,7 +193,7 @@
 static void usage(void)
 {
 	fprintf(stderr, "Usage: tc [ OPTIONS ] OBJECT { COMMAND | help }\n"
-			"       tc [-force] -batch filename\n"
+			"       tc [-force] [-ignore] -batch filename\n"
 	                "where  OBJECT := { qdisc | class | filter | action | monitor | exec }\n"
 	                "       OPTIONS := { -s[tatistics] | -d[etails] | -r[aw] | -p[retty] | -b[atch] [filename] | "
 			"-n[etns] name |\n"
@@ -254,6 +257,12 @@
 
 		if (do_cmd(largc, largv)) {
 			fprintf(stderr, "Command failed %s:%d\n", name, cmdlineno);
+
+			if (ignore_error != 0 && not_find_device > 0) {
+				/* Ignore such error */
+				continue;
+			}
+
 			ret = 1;
 			if (!force)
 				break;
@@ -296,6 +305,8 @@
 			return 0;
 		} else if (matches(argv[1], "-force") == 0) {
 			++force;
+		} else if (matches(argv[1], "-ignore") == 0) {
+			++ignore_error;
 		} else if (matches(argv[1], "-batch") == 0) {
 			argc--;	argv++;
 			if (argc <= 1)
@@ -350,5 +361,10 @@
 	if (use_names)
 		cls_names_uninit();
 
+    if (ignore_error != 0 && not_find_device > 0) {
+        /* Ignore such error */
+        ret = 0;
+    }
+
 	return ret;
 }
--- iproute2-4.3.0/tc/m_mirred.c.orig	2022-05-09 13:54:19.334508035 -0700
+++ iproute2-4.3.0/tc/m_mirred.c	2022-05-09 13:54:19.534499921 -0700
@@ -149,6 +149,7 @@
 
 		if ((idx = ll_name_to_index(d)) == 0) {
 			fprintf(stderr, "Cannot find device \"%s\"\n", d);
+			not_find_device++;
 			return -1;
 		}
 
--- iproute2-4.3.0/tc/tc_class.c.orig	2022-05-09 13:54:19.346507548 -0700
+++ iproute2-4.3.0/tc/tc_class.c	2022-05-09 13:54:19.538499759 -0700
@@ -149,6 +149,7 @@
 
 		if ((req.t.tcm_ifindex = ll_name_to_index(d)) == 0) {
 			fprintf(stderr, "Cannot find device \"%s\"\n", d);
+			not_find_device++;
 			return 1;
 		}
 	}
@@ -451,6 +452,7 @@
 	if (d[0]) {
 		if ((t.tcm_ifindex = ll_name_to_index(d)) == 0) {
 			fprintf(stderr, "Cannot find device \"%s\"\n", d);
+			not_find_device++;
 			return 1;
 		}
 		filter_ifindex = t.tcm_ifindex;
--- iproute2-4.3.0/tc/tc_qdisc.c.orig	2022-05-09 13:54:19.346507548 -0700
+++ iproute2-4.3.0/tc/tc_qdisc.c	2022-05-09 13:54:19.562498786 -0700
@@ -182,6 +182,7 @@
 
 		if ((idx = ll_name_to_index(d)) == 0) {
 			fprintf(stderr, "Cannot find device \"%s\"\n", d);
+			not_find_device++;
 			return 1;
 		}
 		req.t.tcm_ifindex = idx;
@@ -314,6 +315,7 @@
 	if (d[0]) {
 		if ((t.tcm_ifindex = ll_name_to_index(d)) == 0) {
 			fprintf(stderr, "Cannot find device \"%s\"\n", d);
+			not_find_device++;
 			return 1;
 		}
 		filter_ifindex = t.tcm_ifindex;
--- iproute2-4.3.0/include/linux/rtnetlink.h.orig	2022-05-09 13:54:19.242511767 -0700
+++ iproute2-4.3.0/include/linux/rtnetlink.h	2022-05-09 13:54:19.454503167 -0700
@@ -243,6 +243,10 @@
 #define RTPROT_DHCP	16      /* DHCP client */
 #define RTPROT_MROUTED	17      /* Multicast daemon */
 #define RTPROT_BABEL	42      /* Babel daemon */
+#define RTPROT_BGP	186	/* BGP Routes */
+#define RTPROT_OSPF	188	/* OSPF Routes */
+#define RTPROT_RIP	189	/* RIP Routes */
+#define RTPROT_ZSTATIC	196	/* Zebra static routes */
 
 /* rtm_scope
 
--- iproute2-4.3.0/lib/libnetlink.c.orig	2022-05-09 13:54:19.266510793 -0700
+++ iproute2-4.3.0/lib/libnetlink.c	2022-05-09 13:54:19.486501868 -0700
@@ -33,6 +33,8 @@
 #define MIN(a, b) ((a) < (b) ? (a) : (b))
 #endif
 
+int ignore_error = 0;
+
 int rcvbuf = 1024 * 1024;
 
 void rtnl_close(struct rtnl_handle *rth)
@@ -396,6 +398,55 @@
 					return 0;
 				}
 
+				if (ignore_error != 0) {
+					if (err->error == -ENODEV) {
+						/*
+						 * Ignore such error.
+						 * It's possible the device is deleted during executing a batch file
+						 */
+						fprintf(stderr, "RTNETLINK answers: %s\n", strerror(-err->error));
+						return 0;
+					}
+
+					if (err->error == -ENOENT
+					    & (n->nlmsg_type == RTM_DELQDISC
+					       || n->nlmsg_type == RTM_DELTCLASS
+					       || n->nlmsg_type == RTM_DELTFILTER
+					       || n->nlmsg_type == RTM_DELACTION)) {
+						/*
+						 * Ignore such error.
+						 * It's not a real error in some cases.
+						 */
+						fprintf(stderr, "RTNETLINK answers: %s\n", strerror(-err->error));
+						return 0;
+					}
+
+					if (err->error == -EEXIST) {
+						switch (n->nlmsg_type) {
+						case RTM_NEWQDISC:
+						case RTM_NEWTCLASS:
+						case RTM_NEWTFILTER:
+						case RTM_NEWACTION:
+							/* Ignore errors like this as that's not real error as there's no convenient way to detect existing qdisc, class, filter, and action. */
+							fprintf(stderr, "Ignore RTNETLINK errors: %s\n", strerror(-err->error));
+							return 0;
+						default:
+							break;
+						}
+					}
+
+					if (err->error == -EBUSY) {
+						switch (n->nlmsg_type) {
+						case RTM_DELTCLASS:
+							/* Ignore errors like this as that's not real error as there's no convenient way to detect existing class. */
+							fprintf(stderr, "Ignore RTNETLINK errors: %s\n", strerror(-err->error));
+							return 0;
+						default:
+							break;
+						}
+					}
+				}
+
 				fprintf(stderr, "RTNETLINK answers: %s\n",
 					strerror(-err->error));
 				errno = -err->error;
--- iproute2-4.3.0/lib/rt_names.c.orig	2022-05-09 13:54:19.270510631 -0700
+++ iproute2-4.3.0/lib/rt_names.c	2022-05-09 13:54:19.506501057 -0700
@@ -136,6 +136,11 @@
 	[RTPROT_XORP] = "xorp",
 	[RTPROT_NTK] = "ntk",
 	[RTPROT_DHCP] = "dhcp",
+
+	[RTPROT_BGP] = "bgp",
+	[RTPROT_OSPF] = "ospf",
+	[RTPROT_RIP] = "rip",
+	[RTPROT_ZSTATIC] = "zstatic",
 };
 
 
